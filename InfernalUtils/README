In dem package gibts im wesentlichen 3 relevante Klassen:

    CmsearchOut 
    CmsearchHit
    CmAln

CmsearchOut ist die Klasse die den output eines cmsearch runs parst, speichert und zugänglich macht. Die Klasse dient als eine Art Container und Parser für CmsearchHit.

CmsearchHit ist die Klasse die einen hit repräsentiert. Dh. alle info die du auch im output findest. Die Klasse hat dazu eine Instanz von CmAln.

CmAln ist die Klasse die das query-hit alignment parst, speichert und ein paar metriken dazu liefert. Die Klasse hat eigentlich noch viel mehr funktionen, das ist aber nicht wichtig für deine studenten.


Die einzige Klasse die du selbst ins Leben rufen solltest ist CmsearchOut. Ein Beispiel:

import InfernalUtils

results = InfernalUtils.CmsearchOut('/path-to-cmsearch-STDOUT') #Fuer cmsearch stdout
print results[23]  # Printet hit Nr. 24
foo = results[23]  # In foo liegt jetzt das CmsearchHit objekt das hit Nr. 24 abbildet
print foo.cm       # Printet das cm das hit Nr. 24 erzeugt hat
foo.alignment      # enthält das CmAln objekt

print results['pepi123'] #Printet hit mit der uid pepi123. Die uid wird beim parsen einmalig an jeden hit vergeben
bar = results['pepi123'] # ...
print bar.cm             # ...
bar.alignment            # ...

Die genauen attribute der objekte kannst du im code anschauen, bis auf die parsing-routinen sollte alles recht self-explanatory sein. Eine weitere Sache: all das funktioniert gut mit cmsearch und cmscan STDOUT. Resultate die mit --hmmonly erzeugt wurden sollten auch funktionieren, allerdings kanns da probleme geben. cmsearch TBLOUT funktioniert mit der klasse nicht (zumindest nicht implementiert). Im Modul gibt es allerdings eine funktion die tblout parst und jeden entry als dict returnt.

from InfernalUtils import ParseTbloutGeneric

for hit in ParseTbloutGeneric('/path-to-cmsearch-TBLOUT'):
    print hit

Eine Sache noch: Das InfernalUtils benötigt ein paar funktionen aus RNAUtils (auch ein custom package von mir) welches wiederum die ViennaRNA python bindings braucht.
